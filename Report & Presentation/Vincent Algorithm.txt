Vincent Algorithm

phase 1: Tele-operated
- Start VNC viewer
- Start Arduino IDE and Serial Monitor
- Start hector slam 
- Set CPU limit of hector slam and rviz to 80

- Command Vincent to navigate through the maze according to the map shown on rviz
	- Mark location
	- Store commands to "log.txt" on the SD card
	- if (cmd == '<') start backtracking

{
	1. Come out the with the map using SLAM
	2. Navigate and mark location using the map
	3. Store the commands on SD card
}
yudi says:
- We use the SLAM to map
- Cpu limit
- wheel encoder count ticks

- Problem: Build a map representation of the environment and simultaneously localize the 	robot within that map:
- SLAM: simultaneous localization and mapping, "Landmarks are then extracted from the environment from the robots new position. The robot then attempts to associate these landmarks to observations of landmarks it previously has seen. Re-observed landmarks are then used to update the robots position in the EKF."
- hector SLAM: compare and align the picture from current lidar data to previous 
	- advantage: does not require odometry data

phase 2: Autonomous backtracking
- Read from last line of "log.txt" to the first line of "log.txt" on the SD card

	- Inverse all turning directions
	- Play a cue at marked locations for 2 seconds